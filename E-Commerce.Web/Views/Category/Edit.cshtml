@model E_Commerce.Web.ViewModels.EditCategoryViewModel
@{
	
	var trueChecked = Model.isFeatured ? "checked" : string.Empty;
	var falseChecked = !Model.isFeatured ? "checked" : string.Empty;


	var imageURL = !string.IsNullOrEmpty(Model.ImageURL) ? Model.ImageURL : "/Content/images/system/placeholder-image.png";
}
 <style>
        .required {
            color: red;
        }
    </style>
<h2>Edit Category</h2>
<form id="editCategory">
	<input type="hidden" name="ID" value="@Model.ID" />

	<div class="row">
		<div class="col-md-8">
            <div class="form-group">
                <label>Name<span class="required">*</span></label>
                <input class="form-control" id="name" name="Name" value="@Model.Name" />
                <p id="nameErroeMessage"></p>
            </div>
			
			<div class="form-group">
				<label>Image</label>
				<input type="hidden" id="ImageURL" name="ImageURL" value="@Model.ImageURL" />
				<input class="form-control" id="imageUpload" name="Image" type="file" accept=".png, .jpg" />
			</div>
			<div class="form-group">
				<label>Showing</label>
				<div class="input-group">
					<div class="radio form-control">
						<label><input name="isFeatured" type="radio" value="True" @trueChecked /> Live</label>
					</div>
					<div class="radio form-control">
						<label><input name="isFeatured" type="radio" value="False" @falseChecked /> Hide</label>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-4">
			<div class="thumb">
				<img src="@imageURL" class="img-thumbnail img-fluid" id="categoryImage" />
			</div>
		</div>
	</div>

	<button id="cat_UpdateBtn" type="button" class="btn btn-primary" onclick="return validateForm();">Update</button>
	<button id="cat_CancelBtn" type="button" class="btn btn-primary">Cancel</button>
</form>

<script>
function validateForm() {
        var name = document.getElementById("name").value;
       
        if (name == "") {

            document.getElementById("nameErroeMessage").innerHTML = "Name must be filled out";
            document.getElementById("nameErroeMessage").style.color = "red";

        }
       
        else {
                 $.ajax({
			        type: 'POST',
			        url: '@Url.Action("Edit", "Category")',
			        data: $("#editCategory").serialize()
		        })
                .done(function (response) {
        	        $("#categoryTableContainer").html(response);
        	        $("#actionContainer").html("");
        	        focusAction("categoryTableContainer");
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	        alert("FAIL");
                });
        }
    }
	$("#imageUpload").change(function () {
		var element = this;

		var formData = new FormData();

		var totalFiles = element.files.length;

		for (var i = 0; i < totalFiles; i++) {
			var file = element.files[i];
			formData.append("Photo", file);
		}

		$.ajax({
			type: 'POST',
			url: '@Url.Action("UploadImage", "Shared")',
			dataType: 'json',
			data: formData,
			contentType: false,
			processData: false
		})
        .done(function (response) {
        	console.log(response);

        	if (response.Success) {
        		$("#ImageURL").val(response.ImageURL);
        		$("#categoryImage").attr("src", response.ImageURL);
        	}
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});


    

    $("#cat_CancelBtn").click(function () {
		$("#actionContainer").html("");
       focusAction("categoryTableContainer");
	});
</script>