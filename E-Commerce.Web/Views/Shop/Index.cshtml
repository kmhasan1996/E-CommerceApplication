@using E_Commerce.Web.Code

@model E_Commerce.Web.ViewModels.ShopViewmodel
@{
    ViewBag.Title = "Index";
}

<!-- Page title -->
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Shop</h1>
                </div><!-- /.page-title-heading -->
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div style="width:100%;height:50px;background-color:#F63440;text-align:center"><h2 style="color:white;padding-top:10px;">Filters</h2></div>
            </div>
            <div class="col-md-6">

                <div class="filter-shop clearfix">
                    <p class="showing-product float-left">
                        Showing @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + 1) – @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + (Model.Products.Count < Model.Pager.PageSize ? Model.Products.Count : Model.Pager.PageSize)) of @Model.Pager.TotalItems Products
                    </p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="widget widget-sort-by">
                    <div class="row">
                        <div class="col-md-4"> <label>Sort By :</label></div>
                        <div class="col-md-8">
                            <select onchange="location = this.value;" style="height:30px">
                                <option value="@Url.Action("Index","Shop",new {sortBy=(int)SortByEnums.Default,categoryID=Model.CategoryID})" @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Default ? "selected" : string.Empty : string.Empty)>Default - Newest</option>
                                <option value="@Url.Action("Index","Shop",new {sortBy=(int)SortByEnums.PricLowToHigh,categoryID=Model.CategoryID})" @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PricLowToHigh ? "selected" : string.Empty : string.Empty)>Price: low to high</option>
                                <option value="@Url.Action("Index","Shop",new {sortBy=(int)SortByEnums.PriceHighToLow,categoryID=Model.CategoryID})" @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceHighToLow ? "selected" : string.Empty : string.Empty)>Price: high to low</option>
                            </select>
                        </div>

                    </div>

                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-md-3 ">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index", "Shop")">
                            <label>
                                <input type="search" class="header-search-field" placeholder="Search …" value="" name="searchTxt">
                            </label>
                            <input type="submit" class="search-submit " value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Categories
                        </h5>
                        <div class="tag-list">
                            @foreach (var category in Model.FeaturedCategories)
                            {


                                <a href="@Url.Action("Index","Shop",new { categoryID=category.ID,sortBy=Model.SortBy})" class="@(Model.CategoryID.HasValue && Model.CategoryID.Value==category.ID?"active" : string.Empty)" >@category.Name</a>


                            }
                        </div>
                    </div>

                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div><!-- /.widget -->
                    <a href="@Url.Action("Index", "Shop")" class="btn btn-danger">Reset Filters</a>
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
            <div class="col-md-9">

                <div id="productsDiv">
                    @{
                        var filterProductsViewModel = new E_Commerce.Web.ViewModels.FilterProductsViewModel();
                        filterProductsViewModel.Products = Model.Products;
                        filterProductsViewModel.Pager = Model.Pager;
                        filterProductsViewModel.CategoryID = Model.CategoryID;
                        filterProductsViewModel.SortBy = Model.SortBy;


                        Html.RenderAction("FilterProduct", filterProductsViewModel);
                    }
                </div>

            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->

<script>
    var callTimeout;
	var priceSlider = $("#slide-range").slider({
		range: true,
		min: 0,
		max: @Model.MaximumPrice,
		values: [0, @Model.MaximumPrice],
		slide: function (event, ui) {
			var minPrice = ui.values[0];
			var maxPrice = ui.values[1];

            $("#amount").val("$" + minPrice + ".00" + " - " + "$" + maxPrice + ".00");

            clearTimeout(callTimeout);
			callTimeout = setTimeout(GetData, 500);
		}
    });

    function GetData(minimumPrice, maximumPrice) {
         //console.log("GetData Called");
        $.ajax({
            
            url: '@Url.Action("FilterProduct", "Shop")',
            data: {
                sortBy:'@Model.SortBy',
                categoryID : '@Model.CategoryID',
                minimumPrice: priceSlider.slider("values", 0),
                maximumPrice: priceSlider.slider("values", 1)
            }
        })
        .done(function(response) {
           $("#productsDiv").html(response);
                   
        })
       .fail(function(XMLHttpRequest, textStatus, errorThrown) {
           swal({
               title: "Warning",
               text: "Please enter all required fields.",
               icon: "warning",
               buttons: true,
               dangerMode: true,
           });
       });
    }
</script>